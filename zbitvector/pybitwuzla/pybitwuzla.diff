1. Remove the termination callback features from pybitwuzla. They depend on a
   private header file, utils/bzlaabort.h, that isn't available to standalone
   Cython builds.

2. Correct errors in the type annotations.

--- pybitwuzla.pyx	2023-05-30 14:56:50.011212115 +0000
+++ pybitwuzla.pyx	2023-05-30 14:56:53.791196724 +0000
@@ -252,7 +252,7 @@
            Get string representation of term in format ``fmt``.

            :param fmt: Output format. Available formats: "btor", "smt2"
-           :type: str
+           :type fmt: str

            :return: String representation of the term in format ``fmt``.
            :rtype: str
@@ -481,69 +481,12 @@

     def __dealloc__(self):
         if self._c_bitwuzla is not NULL:
-            bitwuzla_api.pybitwuzla_delete(self._c_bitwuzla)
+            bitwuzla_api.bitwuzla_delete(self._c_bitwuzla)

     cdef bitwuzla_api.Bitwuzla* ptr(self):
         return self._c_bitwuzla

     # ------------------------------------------------------------------------
-    # Termination callback
-    # ------------------------------------------------------------------------
-
-    def set_term(self, fun, args):
-        """set_term(fun, args)
-
-           Set a termination callback function.
-
-           Use this function to force Bitwuzla to prematurely terminate if
-           callback function ``fun`` returns True. Arguments ``args`` to
-           ``fun`` may be passed as a single Python object (in case that
-           ``fun`` takes only one argument), a tuple, or a list of arguments.
-
-           E.g., ::
-
-             import time
-
-             def fun1 (arg):
-                 # timeout after 1 sec.
-                 return time.time() - arg > 1.0
-
-             def fun2 (arg0, arg1):
-                 # do something and return True/False
-                 ...
-
-             bitwuzla = Bitwuzla()
-
-             bitwuzla.set_term(fun1, time.time())
-             bitwuzla.set_term(fun1, (time.time(),))
-             bitwuzla.set_term(fun1, [time.time()])
-
-             bitwuzla.set_term(fun2, (arg0, arg1))
-             bitwuzla.set_term(run2, [arg0, arg1])
-
-           :param fun: A python function.
-           :param args: A function argument or a list or tuple of function
-                        arguments.
-        """
-        cdef PyObject* funptr = <PyObject*>fun
-        cdef PyObject* argsptr = <PyObject*>args
-        bitwuzla_api.pybitwuzla_set_term(self.ptr(), funptr, argsptr)
-
-    def terminate(self):
-        """Call terminate callback that was set via
-           :func:`~pybitwuzla.Bitwuzla.set_term`.
-
-           :return: True if termination condition is fulfilled, else False.
-           :rtype: bool
-
-           .. seealso::
-                :func:`~pybitwuzla.Bitwuzla.set_term`.
-        """
-        cdef int32_t res
-        res = bitwuzla_api.bitwuzla_terminate(self.ptr())
-        return res > 0
-
-    # ------------------------------------------------------------------------
     # Bitwuzla API functions (general)
     # ------------------------------------------------------------------------

@@ -780,7 +723,7 @@
            Get the model as a string in format ``fmt``.

            :param fmt: Model format. Available formats: "btor", "smt2"
-           :type: str
+           :type fmt: str

            :return: String representation of model in format ``fmt``.
            :rtype: str
@@ -799,7 +742,7 @@
            Dump the current formula as a string in format ``fmt``.

            :param fmt: Model format. Available formats: "btor", "smt2"
-           :type: str
+           :type fmt: str

            :return: String representation of formula in format ``fmt``.
            :rtype: str
@@ -919,6 +862,7 @@
            :param opt:   Option.
            :type opt:    BitwuzlaOption
            :param value: Option value.
+           :type value:  str or BitwuzlaOption

            .. seealso::
                 For a list of available options see :class:`~pybitwuzla.Option`
@@ -1398,9 +1342,9 @@
            :param kind: The operator kind.
            :type kind: Kind
            :param terms: The number of argument terms.
-           :type terms: list(BitwuzlaTerm)
+           :type terms: list(BitwuzlaTerm) or tuple(BitwuzlaTerm)
            :param indices: The argument terms.
-           :type indices: list(int)
+           :type indices: list(int) or tuple(int)

            :return: A term representing an operation of given kind.
            :rtype: BitwuzlaTerm
@@ -1450,7 +1394,7 @@
            substitutions in ``subst_map``.

            :param terms: List of terms to apply substitutions.
-           :type terms: list(BitwuzlaTerm)
+           :type terms: list(BitwuzlaTerm) or tuple(BitwuzlaTerm) or BitwuzlaTerm
            :param subst_map: The substitution map mapping constants or
                              variables to terms.
            :type subst_map: dict(BitwuzlaTerm,BitwuzlaTerm)
